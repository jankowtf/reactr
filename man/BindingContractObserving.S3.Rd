% Generated by roxygen2 (4.0.2): do not edit by hand
\name{BindingContractObserving.S3}
\alias{BindingContractObserving.S3}
\title{Class: BindingContractObserving.S3}
\usage{
BindingContractObserving.S3(.x, id = character(), where = .GlobalEnv,
  what = character(), where_what = where, binding = function() { })
}
\arguments{
\item{.x}{\code{\link{ANY}}. An object of an arbitrary class whose class
   attribute should be updated so that it becomes an instance of class
   \code{BindingContractObserving.S3}. Mainly intended for rapid prototyping
   purposes}
}
\value{
Instance of class \code{BindingContractObserving.S3}.
}
\description{
Class representing git versions (S3) and its constructor function.
}
\section{Fields}{

\describe{
\item{\code{id}}{\code{\link{character}}. Own ID.}

\item{\code{where}}{\code{\link{environment}}. Own environment.}

\item{\code{what}}{\code{\link{character}}. Object that is observed.}

\item{\code{where_what}}{\code{\link{environment}}. Environment of observed object.}

\item{\code{binding}}{\code{\link{function}}. Binding function.}
}}
\section{Intended use of this class}{


This S3 class, or to be more precise its constructor function, exists mainly
for rapid prototyping purposes.
This is mainly reflected in the fact, that when specifying \code{.x}, this
constructor function will simply update the \code{class} attribute of
whatever object has been provided.

However, it also allows for a more formal OOP-style of rapid
prototyping by offering explicit \emph{class fields} (all arguments except
\code{.x}). Nevertheless, it is probably advisable to switch to an
explicit formal approach such as \emph{S4} and/or \emph{Reference Classes}
once the package or application has reached a certain state of maturity.
}
\examples{
\dontrun{

## Informal use (intended mainly for rapid prototyping) //
## Takes *any* object and simply changes the class attributes
BindingContractObserving.S3(
  list(
    id = "x_2",
    where = .GlobalEnv,
    what = "x_1",
    where_what = .GlobalEnv,
    binding = function(x) {x * 2}
  )
)  
BindingContractObserving.S3(TRUE)  

## Formal use (explicitly using 'fields') //
BindingContractObserving.S3()
BindingContractObserving.S3(
  id = "x_2",
  where = .GlobalEnv,
  what = "x_1",
  where_what = .GlobalEnv,
  binding = function(x) {x * 2}
)

## Recommended: include namespace //
## Regardless if you plan on using this class in an informal or formal way
reactr::BindingContractObserving.S3(
  id = "x_2",
  where = .GlobalEnv,
  what = "x_1",
  where_what = .GlobalEnv,
  binding = function(x) {x * 2}
)

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/reactr}
}
\seealso{
\code{
  	\link[reactr]{BindingContractObserved.S3}
}
}

