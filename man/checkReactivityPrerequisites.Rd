% Generated by roxygen2 (4.0.2): do not edit by hand
\name{checkReactivityPrerequisites}
\alias{checkReactivityPrerequisites}
\title{Check Prerequisits for Setting Reactive Objects (generic)}
\usage{
checkReactivityPrerequisites(input = NULL, strict = 0, ...)
}
\arguments{
\item{input}{\strong{Signature argument}.
Object containing a suitable object for the check.
Typically, this corresponds to the instance of class
\code{\link[reactr]{Reactive.S3}}.}

\item{strict}{\code{\link{numeric}}.
Relevant if a referenced object has been removed thus breaking the
reactive relationship.
\itemiz{
  \item{\code{0}: } {function returns last cached value}
  \item{\code{1}: } {object value is set to \code{NULL} and is returned}
  \item{\code{2}: } {object value is set to an instance of condition class
      \code{BrokenReactiveBinding} and this condition is triggered whenever
      the object's value is requested by \code{\link[base]{get}} or
      its syntactical surgars \code{{obj-name} or \code{}}
  }
}}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\description{
Checks prerequisites to determine if its valid to set the reactive object as
desired. This decision is influenced by the level of strictness that is
imposed via \code{strict}.
}
\examples{
\dontrun{

## NOTE
## This function has a strong internal character as it is mainly designed to 
## be used inside of 'setReactiveS3()'.
## Thus not all aspects can be properly illustrated if not used in its default
## context

## Start with a fresh hash registry state //
resetHashRegistry()

suppressWarnings(rm(x_1))
input <- reactr::Reactive.S3()
input <- prepareReactiveInstance(
  input = input, 
  id = "x_1",
  value = NULL,
  where = environment()
)

## Error reason: object does not exist yet //
try(checkReactivityPrerequisites(input = input, strict = 2))

## Error reason: object exists but is non-reactive //
x_1 <- 10
try(checkReactivityPrerequisites(input = input, strict = 2))

## Error reason: reactive object already exists //
## This cannot be illustrated outside the context of 'setReactiveS3()'

## All prerequisites met //
checkReactivityPrerequisites(input = input)

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/reactr}
}
\seealso{
\code{
  	\link[reactr]{checkReactivityPrerequisites-Reactive.S3-method},
    \link[reactr]{setReactiveS3}
}
}

