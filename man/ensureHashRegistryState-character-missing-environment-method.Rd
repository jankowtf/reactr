% Generated by roxygen2 (4.0.1): do not edit by hand
\docType{methods}
\name{ensureHashRegistryState,character,missing,environment-method}
\alias{ensureHashRegistryState,character,missing,environment-method}
\title{Ensure Hash Registry State}
\usage{
\S4method{ensureHashRegistryState}{character,missing,environment}(id,
  watch = character(), where = .GlobalEnv, .hash_id = "._HASH", ...)
}
\arguments{
\item{id}{\code{\link{character}}.}

\item{watch}{\code{\link{missing}}.}

\item{where}{\code{\link{environment}}.}

\item{.hash_id}{\code{\link{character}}.
Name of the auxiliary environment for caching hash values.
Default: \code{"._HASH"}. Keep it unless this name is already taken in
either \code{where} or \code{where_watch}.}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\value{
See method
   \code{\link[reactr]{ensureHashRegistryState-character-character-environment-method}}
}
\description{
See generic: \code{\link[reactr]{ensureHashRegistryState}}
}
\examples{
\dontrun{

## Ensure hash for variable only //
.hash_id <- "._HASH"
where <- new.env()

ensureHashRegistryState(id = "x_1", where = where)
ls(where[[.hash_id]])
ls(where[[.hash_id]]$x_1)
where[[.hash_id]]$x_1$x_1

## Ensure hash values for variable and monitored variable //
where <- new.env()

ensureHashRegistryState(id = "x_1", watch = "x_2", where = where)
ls(where[[.hash_id]])
ls(where[[.hash_id]]$x_2)
where[[.hash_id]]$x_2$x_2
where[[.hash_id]]$x_2$x_1

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/reactr}
}
\seealso{
\code{
   \link[reactr]{ensureHashRegistryState}
}
}

