% Generated by roxygen2 (4.0.2): do not edit by hand
\name{ensureHashRegistryState}
\alias{ensureHashRegistryState}
\title{Ensure Hash Registry State}
\usage{
ensureHashRegistryState(id, watch = character(), where = .GlobalEnv,
  .hash_id = "._HASH", ...)
}
\arguments{
\item{id}{\strong{Signature argument}.
Object containing id information.}

\item{watch}{\strong{Signature argument}.
Object containing monitored variable information.}

\item{where}{\strong{Signature argument}.
Object containing location information.}

\item{.hash_id}{\code{\link{character}}.
Name of the auxiliary environment for caching hash values.
Default: \code{"._HASH"}. Keep it unless this name is already taken in
either \code{where} or \code{where_watch}.}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\description{
Ensures the required state of the hash registry \code{<where>[[.hash_id]]}.
}
\examples{
\dontrun{

## Ensure hash for variable only //
.hash_id <- "._HASH"
where <- new.env()

ensureHashRegistryState(id = "x_1", where = where)
ls(where[[.hash_id]])
ls(where[[.hash_id]]$x_1)
where[[.hash_id]]$x_1$x_1

## Ensure hash values for variable and monitored variable //
where <- new.env()

ensureHashRegistryState(id = "x_1", watch = "x_2", where = where)
ls(where[[.hash_id]])
ls(where[[.hash_id]]$x_2)
where[[.hash_id]]$x_2$x_2
where[[.hash_id]]$x_2$x_1

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/reactr}
}
\seealso{
\code{
  	\link[reactr]{ensureHashRegistryState-character-character-environment-method}
}
}

