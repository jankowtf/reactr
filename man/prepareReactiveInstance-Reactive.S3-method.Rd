% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{prepareReactiveInstance,Reactive.S3-method}
\alias{prepareReactiveInstance,Reactive.S3-method}
\title{Prepare Reactive Instance (Reactive.S3-method)}
\usage{
\S4method{prepareReactiveInstance}{Reactive.S3}(input = NULL,
  id = character(), value = NULL, where = parent.frame(), ...)
}
\arguments{
\item{input}{\code{\link{Reactive.S3}}.}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\value{
\code{\link{logical}}. \code{TRUE}: check passed;
   \code{FALSE}: check not passed.
}
\description{
See generic: \code{\link[reactr]{prepareReactiveInstance}}
}
\examples{
\dontrun{

## Start with a fresh hash registry state //
resetHashRegistry()

## Example instance //
input <- reactr::Reactive.S3()

where <- new.env()
input <- prepareReactiveInstance(
  input = input, 
  id = "x_1",
  value = "hello world!",
  where = where
)
identical(input$uid, getReactiveUid("x_1", where))
identical(input$value, "hello world!")
identical(input$where, where)

## In hash registry //
hash <- getHashRegistry() 
exists(input$uid, hash, inherits = FALSE)
identical(hash[[input$uid]]$uid, input$uid)
identical(hash[[input$uid]]$where, input$where)

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/reactr}
}
\seealso{
\code{
   \link[reactr]{prepareReactiveInstance},
    \link[reactr]{setReactiveS3}
}
}

