% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{removeReactive,character,missing-method}
\alias{removeReactive,character,missing-method}
\alias{removeReactive-method_main}
\title{Remove Reactive Object (char-missing-method)}
\usage{
\S4method{removeReactive}{character,missing}(id, where, .hash_id, .tracelevel,
  ...)
}
\arguments{
\item{id}{\code{\link{character}}.}

\item{where}{\code{\link{missing}}.
Internal argument that should not be set explicitly.
The value at runtime will correspond to the function that has been
provided via argument \code{binding}.}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\value{
See method
   \code{\link[reactr]{removeReactive-character-environment-method}}
}
\description{
See generic: \code{\link[reactr]{removeReactive}}
}
\examples{
\dontrun{

## Start with fresh hash registry //
resetRegistry()

## Non-strict //
where <- new.env()  
setReactiveS3(id = "x_1", value = 10, where = where)
setReactiveS3(id = "x_2", 
  value = function(refs = list(x_1 = where)) {x_1 * 2}, 
  where = where)

removeReactive(id = "x_1", where = where)
exists("x_1", envir = where, inherits = FALSE)
where$x_2

## Strict //
where <- new.env()  
setReactiveS3(id = "x_2", 
  value = function(refs = list(x_1 = where)) {x_1 * 2}, 
  where = where, 
  strict = TRUE
)
removeReactive(id = "x_1", where = where)
try(where$x_2)
## --> as referenced object 'x_1' does not exist anymore

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/reactr}
}
\seealso{
\code{
   Generic: \link[reactr]{removeReactive}
}
}

