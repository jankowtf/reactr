% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{removeReactive,character,missing-method}
\alias{removeReactive,character,missing-method}
\alias{removeReactive-method_main}
\title{Unset Reactive Object}
\usage{
\S4method{removeReactive}{character,missing}(id, where = .GlobalEnv,
  .hash_id = "._HASH", .tracelevel = 0, ...)
}
\arguments{
\item{id}{\code{\link{character}}.}

\item{where}{\code{\link{missing}}.
Internal argument that should not be set explicitly.
The value at runtime will correspond to the function that has been
provided via argument \code{binding}.}

\item{.hash_id}{\code{\link{character}}.
Name of the auxiliary environment for caching hash values.
Default: \code{"._HASH"}. Keep it unless this name is already taken in
either \code{where} or \code{where_watch}.}

\item{.tracelevel}{\code{\link{numeric}}.
Verbosity level for tracing purposes. Value of \code{0} means
\emph{no tracing} whereas values of \code{> 0} can be used to fine
control tracing. The trace level can also be set as a global option when
using package \code{tracer} (\strong{not functional yet}).}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\value{
See method
   \code{\link[reactr]{removeReactive-character-environment-method}}
}
\description{
See generic: \code{\link[reactr]{removeReactive}}
}
\examples{
\dontrun{

where = new.env()  

setReactive(id = "x_1", value = 10, where = where)
setReactive(id = "x_2", watch = "x_1", where = where)

removeReactive(id = "x_1", where = where)
exists("x_1", envir = where, inherits = FALSE)
where$x_2

## Strict //
where = new.env()  
  
setReactive(id = "x_1", value = 10, where = where)
setReactive(id = "x_2", watch = "x_1", where = where, strict = TRUE)
removeReactive(id = "x_1", where = where)
where$x_2
## --> as observed object 'x_1' does not exist anymore

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/reactr}
}
\seealso{
\code{
   Generic: \link[reactr]{removeReactive}
}
}

