% Generated by roxygen2 (4.0.2): do not edit by hand
\name{removeReactiveByUid}
\alias{removeReactiveByUid}
\title{Remove Reactive Object (generic)}
\usage{
removeReactiveByUid(uid, ...)
}
\arguments{
\item{uid}{\strong{Signature argument}.
Object containing UID information.}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\description{
Removes a reactive object from its environment.
}
\details{
\strong{Note that tis is different from unsetting a reactive object
via \code{\link[reactr]{removeReactiveByUid}}}. It is equivalent to
\code{\link[base]{rm}} with a previous call to
\code{\link[reactr]{unsetReactiveByUid}}.
}
\note{
The main S4 method is
\code{\link[reactr]{removeReactiveByUid-character-method}}.
}
\section{Implications with respect to observing variables}{

If other reactive variables have been observing the reactive variable that
has been removed, from this point on they will simply return the last value
that has been cached if \code{strict = FALSE} or \code{NULL} if
\code{strict = TRUE} when the observing object was set via
\code{\link[reactr]{setReactiveS3}}
}
\examples{
\dontrun{

where = new.env()  
setReactiveS3(id = "x_1", value = 10, where = where)
setReactiveS3(id = "x_2", 
              value = function(refs = list(x_1 = where)) x_1,
              where = where)

unsetReactiveByUid(uid = computeObjectUid("x_1", where))
where$x_1
identical(where$x_2, where$x_1)
where$x_1 <- 20
where$x_1
where$x_2
## --> no reactive binding to 'x_1' anymore

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/reactr}
}
\seealso{
\code{
  	\link[reactr]{removeReactiveByUid-character-method}
}
}

