% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{rmReactive,character,environment-method}
\alias{rmReactive,character,environment-method}
\alias{rmReactive-method_main}
\title{Remove Reactive Object (character-environment)}
\usage{
\S4method{rmReactive}{character,environment}(id, where = parent.frame(), ...)
}
\arguments{
\item{id}{\code{\link{character}}.}

\item{where}{\code{\link{environment}}.}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\value{
\code{\link{logical}}. \code{TRUE}: success; \code{FALSE}: object
   was not a reactive one or failure to remove.
}
\description{
See generic: \code{\link[reactr]{rmReactive}}
}
\examples{
\dontrun{

## Start with fresh registry //
resetRegistry()

## Non-strict //
setReactiveS3(id = "x_1", value = 10)
setReactiveS3(id = "x_2", 
  value = function() {
    "object-ref: {id: x_1}"
    x_1 * 2
  }
)

rmReactive(id = "x_1")
exists("x_1", envir = environment(), inherits = FALSE)
x_2
## --> `x_2` not affected but only because `strict_get = 0`

## Strict: level 1 //
setReactiveS3(id = "x_1", value = 10)
setReactiveS3(id = "x_2", 
  value = function() {
    "object-ref: {id: x_1}"
    x_1 * 2
  },
  strict_get = 1
)
rmReactive(id = "x_1")
try(x_2)
## --> warning as referenced object `x_1` does not exist anymore

## Strict: level 2 //
setReactiveS3(id = "x_1", value = 10)
setReactiveS3(id = "x_2", 
  value = function() {
    "object-ref: {id: x_1}"
    x_1 * 2
  },
  strict_get = 2
)
rmReactive(id = "x_1")
try(x_2)
## --> error as referenced object `x_1` does not exist anymore

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/reactr}
}
\seealso{
\code{
   Generic: \link[reactr]{rmReactive}
}
}

