% Generated by roxygen2 (4.0.1): do not edit by hand
\name{setReactive_reactive_bare}
\alias{setReactive_reactive_bare}
\title{Set Value (bare)}
\usage{
setReactive_reactive_bare(id, value = NULL, where = .GlobalEnv,
  watch = character(), binding = substitute(expression()),
  binding_type = 1, mutual = FALSE, force = FALSE, where_watch = where,
  .hash_id = "._HASH", .tracelevel = 0, ...)
}
\arguments{
\item{id}{\code{\link{character}}.
Name of the variable to set.}

\item{value}{\code{\link{ANY}}.
Variable value.}

\item{where}{\code{\link{environment}}.
Environment to set the variable in.}

\item{watch}{\\code{\link{character}}.
Name of a variable to be monitored}

\item{binding}{\code{\link{call}}
Function that defines the binding relationship between \code{id} and
\code{watch}. See details.}

\item{binding_type}{\code{\link{integer}} or \code{\link{numerical}}.
\itemize{
   \item{\code{1}:} {
   use \code{\link{makeActiveBinding}} to establish the binding
   }
   \item{\code{2}:} {
   use custom way of establishing the binding
   }
}}

\item{mutual}{\code{\link{logical}}.
\code{TRUE}: mutual binding contract;
\code{FALSE}: binding contract depends on \code{watch} being specified
or not (specified: \code{monitoring} contract;
not specified: \emph{monitored} contract).}

\item{force}{\code{\link{logical}}.
\code{TRUE}: force a binding reset even though there might already
have been defined another one;
\code{FALSE}: in case a binding has already been defined it is not
overwritten. \strong{Note that for the following constellations this value is
automtically set to \code{TRUE}: \code{mutual = TRUE} and whenever an
explicit binding definition is provided via \code{binding}}.}

\item{.hash_id}{\code{\link{character}}.
Name of the auxiliary environment for caching hash values.
Default: \code{"._HASH"}. Keep it unless this name is already taken in
either \code{where} or \code{where_watch}.}

\item{.tracelevel}{\code{\link{numeric}}.
Verbosity level for tracing purposes. Value of \code{0} means
\emph{no tracing} whereas values of \code{> 0} can be used to fine
control tracing. The trace level can also be set as a global option when
using package \code{tracer} (\strong{not functional yet}).}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\description{
Sets a variable value in an environment.
}
\details{
If \code{binding_type = 1} (the current default), then the
actual binding is established via \code{\link[base]{makeActiveBinding}}.
The actual binding relationship is provided via a simple function of the
form \code{function(x) {## Do something with 'x'}} via argument \code{binding}.
For standard binding cases (simple monitoring and mutual bindings), you
don't need to provided any explicit binding function via \code{binding}.
The function takes care of setting it to \code{function(x) {x}}.
}
\note{
There also exists an S4 method
\code{\link[reactr]{setReactive-character-ANY-environment-character-environment-call-method}}.
It is about 10 - 15 % slower than this bare S3 function.
}
\examples{
\dontrun{

## TODO: add example

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/reactr}
}
\seealso{
\code{
  	\link[reactr]{setReactive-character-ANY-environment-character-call-method}
}
}

