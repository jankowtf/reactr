% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{unsetReactive,character,missing-method}
\alias{unsetReactive,character,missing-method}
\alias{unsetReactive-method_main}
\title{Unset Reactive Object (char-miss-method)}
\usage{
\S4method{unsetReactive}{character,missing}(id, where = parent.frame(), ...)
}
\arguments{
\item{id}{\code{\link{character}}.}

\item{where}{\code{\link{missing}}.
Internal argument that should not be set explicitly.
The value at runtime will correspond to the function that has been
provided via argument \code{binding}.}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\value{
See method
   \code{\link[reactr]{unsetReactive-character-environment-method}}
}
\description{
See generic: \code{\link[reactr]{unsetReactive}}
}
\examples{
\dontrun{

## Start with a fresh hash registry //
resetRegistry()

setReactiveS3(id = "x_1", value = 10)
setReactiveS3(id = "x_2", 
  value = function(refs = list(x_1 = parent.frame())) x_1 * 2
)

## Illustrate reactiveness //
x_1
x_2
x_1 <- 50
x_1 
x_2

## Unset reactive --> turn it into a regular object again //
unsetReactive(id = "x_1", where = where)

## Illustrate removed reactiveness //
x_1
x_2
x_1 <- 10
x_1
x_2
## --> 'x_1' is not a reactive object anymore; from now on, 'x_2' simply returns
## the last value that has been cached

## Implications with respect to hash registry //
## Entry corresponding to 'x_1' set in 'environment()' has been removed
exists(getObjectUid(id = "x_1", where = where, getRegistry()))
## [1] FALSE

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/reactr}
}
\seealso{
\code{
   Generic: \link[reactr]{unsetReactive}
}
}

