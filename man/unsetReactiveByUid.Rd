% Generated by roxygen2 (4.0.2): do not edit by hand
\name{unsetReactiveByUid}
\alias{unsetReactiveByUid}
\title{Unset Reactive Object (generic)}
\usage{
unsetReactiveByUid(uid, ...)
}
\arguments{
\item{uid}{\strong{Signature argument}.
Object containing UID information.}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\description{
Removes the reactive \strong{character} from an object, i.e. its
binding(s) to other objects and the ability for other objects to have
bindings to it. It is equivalent to transforming the object to one that
has been assigned via \code{\link[base]{assign}} or \code{\link[base]{<-}}
instead of \code{\link[reactr]{setReactiveS3}} and thus in turn
by \code{\link[base]{makeActiveBinding}}.

Note that it is \strong{not} equivalent to removing/deleting the object!
See \code{\link[reactr]{removeReactive}} for this purpose.
}
\note{
The main S4 method is
\code{\link[reactr]{unsetReactiveByUid-character-method}}.
}
\section{Implications with respect objects depending on this object}{


If other reactive objects have been relying on this reactive variable,
from this point on they will simply return the last value
that has been cached. \strong{So there is no actual reactive binding anymore}.
}
\examples{
\dontrun{

setReactiveS3(id = "x_1", value = 10)
unsetReactiveByUid(uid = computeObjectUid("x_1"))
isReactive("x_1")

## Clean up //
removeReactive("x_1")

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/reactr}
}
\seealso{
\code{
  	\link[reactr]{unsetReactiveByUid-character-method},
    \link[reactr]{unsetReactive}
}
}

