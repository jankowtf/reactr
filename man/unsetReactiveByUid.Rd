% Generated by roxygen2 (4.0.2): do not edit by hand
\name{unsetReactiveByUid}
\alias{unsetReactiveByUid}
\title{Unset Reactive Object}
\usage{
unsetReactiveByUid(uid, ...)
}
\arguments{
\item{uid}{\strong{Signature argument}.
Object containing UID information.}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\description{
Removes the reactive \strong{character} from an object, i.e. its binding(s) to others
or the ability for other objects to have bindings to it. This is \strong{not}
equivalent to removing/deleting the object! See \code{\link[reactr]{removeReactive}}
for this purpose.
}
\note{
The main S4 method is
\code{\link[reactr]{unsetReactiveByUid-character-method}}.
}
\section{Implications with respect objects depending on this object}{

If other reactive objects have been relying on this reactive variable,
from this point on they will simply return the last value
that has been cached.
}
\examples{
\dontrun{

setReactiveS3(id = "x_1", value = 10)
setReactiveS3(
  id = "x_2", 
  value = function(deps = list(x_1 = .GlobalEnv)) {x_1}
)
unsetReactiveByUid(uid = getReactiveUid("x_1", .GlobalEnv))
x_1
identical(x_2, x_1)
x_1 <- 20
x_1
x_2
## --> no reactive binding to 'x_1' anymore; last-cached value is returned

## Reset again //
setReactiveS3(id = "x_1", value = 10)
x_1
x_2
## --> cached value still at '10' --> reactivity is revealed only after 
## changing 'x_1'
x_1 <- 20
x_1
x_2

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/reactr}
}
\seealso{
\code{
  	\link[reactr]{unsetReactiveByUid-character-method}
}
}

